// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace HalloWPF.UITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WpfText uIHallowiegehtsText = this.UIMainWindowWindow.UIHallowiegehtsText;
            #endregion

            // Verify that the 'DisplayText' property of 'Hallo wie gehts?' label equals 'Hallo wie gehts?'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIHallowiegehtsTextDisplayText, uIHallowiegehtsText.DisplayText);
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfEdit uIInputTextBoxEdit = this.UIMainWindowWindow.UIInputTextBoxEdit;
            #endregion

            // Type 'Hallo wie gehts?' in 'inputTextBox' text box
            uIInputTextBoxEdit.Text = this.RecordedMethod1Params.UIInputTextBoxEditText;
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Hallo wie gehts?' label equals 'Hallo wie gehts?'
        /// </summary>
        public string UIHallowiegehtsTextDisplayText = "Hallo wie gehts?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Hallo wie gehts?' in 'inputTextBox' text box
        /// </summary>
        public string UIInputTextBoxEditText = "Hallo wie gehts?";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIInputTextBoxEdit
        {
            get
            {
                if ((this.mUIInputTextBoxEdit == null))
                {
                    this.mUIInputTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIInputTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputTextBox";
                    this.mUIInputTextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIInputTextBoxEdit;
            }
        }
        
        public WpfText UIHallowiegehtsText
        {
            get
            {
                if ((this.mUIHallowiegehtsText == null))
                {
                    this.mUIHallowiegehtsText = new WpfText(this);
                    #region Search Criteria
                    this.mUIHallowiegehtsText.SearchProperties[WpfText.PropertyNames.AutomationId] = "outputTextBlock";
                    this.mUIHallowiegehtsText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIHallowiegehtsText;
            }
        }
        
        public WpfCheckBox UIWillgetcheckedCheckBox
        {
            get
            {
                if ((this.mUIWillgetcheckedCheckBox == null))
                {
                    this.mUIWillgetcheckedCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIWillgetcheckedCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "outputCheckBox";
                    this.mUIWillgetcheckedCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIWillgetcheckedCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIInputTextBoxEdit;
        
        private WpfText mUIHallowiegehtsText;
        
        private WpfCheckBox mUIWillgetcheckedCheckBox;
        #endregion
    }
}
